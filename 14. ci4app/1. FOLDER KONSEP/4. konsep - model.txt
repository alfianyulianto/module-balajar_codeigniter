Modeling Data

- Koneksi ke datbase lewat file sistem .env
  ^ database.default.hostname = localhost   -> bisa localhost atau ip yaitu 127.0.0.1
  ^ database.default.database = ci4app
  ^ database.default.username = root
  ^ database.default.password =
  ^ database.default.DBDriver = MySQLi

- Model : untuk berinteraksi dengan data yang ada di dalam database
- Nama folder pada mode biasanya berisi nama tabel di database di ikuti kata Model.php

- Ada beberapa property yang bisa kita set (Configuring Your Model)
  ^ protected $table; : jika tidak ada nilai default kita harus isi
  ^ protected $primaryKey = id; : default id, jika tabel kita nama field primary key nya bukan id maka kita harus set di Models
  ^ protected $returnType = array; : kita bisa timpa menjadi object
  ^ protected $useSoftDeletes = true; default true, kita bisa ganti false. useSoftDeletes adalah data yang ada di database tidak akan pernah terhapus, meskipun kita mengahpus data, maka datanya akan tetap ada cuma nanti akan ada field deleted_at
  ^ protected $allowedFields = []; : untuk memberitahu field mana yang boleh di isi manual ketika melakukan insert data
  ^ protected useTimestamps = false; : default false, artinya kita tidak butuh fitur created_at dan updated_at otomaits
  ^ protected $createdField = 'created_at';
  ^ protected $updatedField = 'updated_at';


Connecting Database / Koneksi ke database tanpa menggunakan model
- $db = \Config\Database::connect();


Working with data / Bekerja dengan data
$userModel = new App\Models\UserModel;
- $user = $this->userModel->find($user_id) : mengembalikan satu baris berdasarkan id yang ditemukan
- $user = $this->userModel->findColumn('name_column') : untuk mengembalikan isi dari kolom yang ada di database
- $user = $this->userModel->findAll() : mengembalikan semua data
- $user = $userModel->where('name_columns', value)->first() : mengembalikan satu bari pertama berdasarkan hasil, ini digunakan dalam kombinasi dengan query builder
- $allUsers = $userModel->withDeleted()->findAll();
- $deletedUsers = $userModel->onlyDeleted()->findAll();


Saving Data
$data = [
    'username' => 'darth',
    'email'    => 'd.vader@theempire.com',
];
- $userModel->insert($data);
- $userModel->update($id, $data);

$data = [
    'active' => 1,
];
- $userModel->update([1, 2, 3], $data);

- $userModel
    ->whereIn('id', [1, 2, 3])
    ->set(['active' => 1])
    ->update();

- SAVE : untuk menangani insert() atau update()
$primaryKey = 'id'; // Defined as a model property
// Does an insert()
$data = [
    'username' => 'darth',
    'email'    => 'd.vader@theempire.com',
];
$userModel->save($data);

// Performs an update, since the primary key, 'id', is found.
$data = [
    'id'       => 3,
    'username' => 'darth',
    'email'    => 'd.vader@theempire.com',
];
$userModel->save($data);

- $userModel->delete(12) : menghapus data
- $userModel->delete([1, 2, 3])
$userModel->where('id', 12)->delete()

- &userModel->purgeDeleted() : membersihkan tabel database dengan menghapus secara permanen semua baris yang memiliki 'deleted_at IS NOT NULL'.

